From: <Saved by Blink>
Subject: 
Date: Tue, 11 Jan 2016 08:27:17 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_CED5_0BE1B84A.05EF82CC"

------=_NextPart_000_CED5_0BE1B84A.05EF82CC
Content-Type: text/html
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///Users/Scott_Epic/git/WebCalcAPI/README.md

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3Dwindows-1252"><link rel=3D"stylesheet" id=3D"theme" href=3D"chrome-exten=
sion://febilkbfcbhebfnokafefeacimjdckgl/theme/Github.css"></head><body><h1 =
id=3D"webcalcapi">WebCalcAPI</h1>
<p>A Django Rest Framework Site that provides online calculation functions =
through API calls. Also a guide on how to create multiple versions of djang=
o-rest-framework APIs.</p>
<p>Author: <a href=3D"https://github.com/scottjzou">Jiahang Zou</a></p>
<h2 id=3D"requirements">Requirements</h2>
<p>Install by running <code>pip install -r requirements.txt</code>
The unspecified installations are for heroku usages.</p>
<ul>
<li>Required:<ul>
<li>Python=3D=3D2.7</li>
<li>Django=3D=3D1.9.1</li>
<li>djangorestframework=3D=3D3.3.2</li>
</ul>
</li>
<li><p>Optional:</p>
<ul>
<li>django-rest-swagger=3D=3D0.3.4 (prereq: PyYAML=3D=3D3.11)</li>
<li>To run <code>asian_option</code> example: <ul>
<li>numpy=3D=3D1.10.4</li>
<li>scipy=3D=3D0.16.1</li>
</ul>
</li>
</ul>
</li>
<li><p>The versions are not strictly required, as the author simply used th=
e newest version there is through pip install.</p>
</li>
<li><strong>django-rest-swagger</strong> is an api documentation generator =
that is quite useful if this project becomes large-scale. However, the base=
 status of the version is not implementing it, as it is for internal use.</=
li>
<li>Also, this project was written for the purposes of completing an intern=
 assignment, along with goals of learning Django Rest API and practicing us=
es of pyenv and Heroku. So this environment does have some unnecessary setu=
ps for <strong>pyenv</strong> and <strong>heroku</strong>. It is highly sug=
gested that you install everything under a virtual environment to avoid con=
flicts.</li>
</ul>
<h2 id=3D"structure">Structure</h2>
<p>Notice this is a django-project, so it obeys all the django rules. For d=
etails, see <a href=3D"https://www.djangoproject.com/">https://www.djangopr=
oject.com/</a>.</p>
<p>The project is constructed mainly under <a href=3D"http://www.django-res=
t-framework.org/">Django Rest Framework</a>. See its tutorial to get some m=
ain ways to construct each API. The APIs in this project is primarily for t=
emporary calculation purposes, instead of retrieving objects from object mo=
dels. Therefore, function-based views were used to design such models.</p>
<p>Under <a href=3D"file:///Users/Scott_Epic/git/WebCalcAPI/WebCalculator/v=
iews.py">views.py</a>, there are example functions of api views. Each of th=
ese is a function dealing with get requests, with related urls under <a hre=
f=3D"file:///Users/Scott_Epic/git/WebCalcAPI/WebCalculator/urls.py">urls.py=
</a>. For more details, read the documentations under each function.</p>
<h2 id=3D"adding-another-function">Adding another function</h2>
<ol>
<li>Define the function in <a href=3D"file:///Users/Scott_Epic/git/WebCalcA=
PI/WebCalculator/views.py">views.py</a>, follow the format of other functio=
ns (e.g. with api_view decorator, a description of input and output types, =
a try/except clause), and by taking a request and examing its arguments, re=
turn a Response object.</li>
<li>Add a url with the desired format in <a href=3D"file:///Users/Scott_Epi=
c/git/WebCalcAPI/WebCalculator/urls.py">urls.py</a></li>
<li>Add your new function in api_root under <a href=3D"file:///Users/Scott_=
Epic/git/WebCalcAPI/WebCalculator/views.py">views.py</a>. Make sure the nam=
e your reverse matches the name you give in urls.py in step 2.</li>
<li>Testing: To run a local server, do <code>python manage.py runserver</co=
de> at the base directory, and then check your localhost at port 8000: <a h=
ref=3D"http://localhost:8000/">http://localhost:8000</a>, your API should b=
e linked there, or directly call your API with your given format.</li>
</ol>
<p>See Detail in the following tutorial.</p>
<h3 id=3D"example-tutorial-adding-an-add-function-in-function-based-view-">=
Example Tutorial: Adding an Add function in function-based view.</h3>
<ol>
<li><p>Define add in <a href=3D"file:///Users/Scott_Epic/git/WebCalcAPI/Web=
Calculator/views.py">views.py</a>.</p>
<pre><code class=3D"lang-python"> <span class=3D"decorator">@api_view()</sp=
an>
 <span class=3D"function"><span class=3D"keyword">def</span> <span class=3D=
"title">add</span><span class=3D"params">(request)</span>:</span>
     <span class=3D"string">"""
     An addition function.=20
     add(
         a: int,
         b: int,
         ret: int
     )
     example call: **whatever_host**/add/?a=3D1&amp;b=3D1
     should return a json looks like:
     {'function': 'add','result': 2}
     """</span>
     <span class=3D"keyword">try</span>:
         first_number =3D int(request.GET.get(<span class=3D"string">'a'</s=
pan>))
         second_number =3D int(request.GET.get(<span class=3D"string">'b'</=
span>))
         <span class=3D"keyword">return</span> Response({<span class=3D"str=
ing">'function'</span>: <span class=3D"string">'multiply'</span>,<span clas=
s=3D"string">'result'</span>: first_number + second_number})
     <span class=3D"keyword">except</span> Exception <span class=3D"keyword=
">as</span> e:
         <span class=3D"keyword">return</span> Response({<span class=3D"str=
ing">'function'</span>: <span class=3D"string">'multiply'</span>,<span clas=
s=3D"string">'result'</span>: <span class=3D"string">'there was an error '<=
/span> + str(e)})
</code></pre>
<p> Make sure you have all three parts of the method:</p>
<ul>
<li>the api_view() decorator</li>
<li>the documentation of the function</li>
<li>the try/except loop with getting the request and returning the response=
.</li>
</ul>
</li>
<li><p>Define adds url in <a href=3D"file:///Users/Scott_Epic/git/WebCalcAP=
I/WebCalculator/urls.py">urls.py</a>.</p>
<pre><code class=3D"lang-python"> url(<span class=3D"string">r'^add/?$'</sp=
an>, views.add, name=3D<span class=3D"string">'add'</span>),
</code></pre>
</li>
<li>Define the documentation and link in views.api_root method:<pre><code c=
lass=3D"lang-python"> <span class=3D"keyword">return</span> <span class=3D"=
constant">Response</span>({
     ...
     <span class=3D"string">'add'</span><span class=3D"symbol">:</span> rev=
erse(<span class=3D"string">'add'</span>, request=3Drequest),
 })
</code></pre>
</li>
<li>Test it.</li>
</ol>
</body></html>
------=_NextPart_000_CED5_0BE1B84A.05EF82CC
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://febilkbfcbhebfnokafefeacimjdckgl/theme/Github.css

* { margin: 0px; padding: 0px; }

body { font-style: normal; font-variant: normal; font-weight: normal; font-=
stretch: normal; font-size: 13.34px; font-family: helvetica, arial, freesan=
s, clean, sans-serif; color: black; line-height: 1.4em; padding: 0.7em; bac=
kground-color: rgb(248, 248, 248); }

p { margin: 1em 0px; line-height: 1.5em; }

table { font-size: inherit; margin: 1em; }

table th { border-bottom-width: 1px; border-bottom-style: solid; border-bot=
tom-color: rgb(187, 187, 187); padding: 0.2em 1em; }

table td { border-bottom-width: 1px; border-bottom-style: solid; border-bot=
tom-color: rgb(221, 221, 221); padding: 0.2em 1em; }

input[type=3D"text"], input[type=3D"password"], input[type=3D"image"], text=
area { font-style: normal; font-variant: normal; font-weight: normal; font-=
stretch: normal; font-size: 99%; line-height: normal; font-family: helvetic=
a, arial, freesans, sans-serif; }

select, option { padding: 0px 0.25em; }

optgroup { margin-top: 0.5em; }

pre, code { font-style: normal; font-variant: normal; font-weight: normal; =
font-stretch: normal; font-size: 12px; line-height: normal; font-family: Mo=
naco, 'Courier New', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', monosp=
ace; }

pre { margin: 1em 0px; font-size: 12px; border: 1px solid rgb(221, 221, 221=
); padding: 5px; line-height: 1.5em; color: rgb(68, 68, 68); overflow: auto=
; box-shadow: rgba(0, 0, 0, 0.0666667) 0px 1px 2px inset; border-radius: 3p=
x; background-color: rgb(238, 238, 238); }

pre code { padding: 0px; font-size: 12px; border: none; background-color: r=
gb(238, 238, 238); }

code { font-size: 12px; color: rgb(68, 68, 68); padding: 0px 0.2em; border:=
 1px solid rgb(222, 222, 222); background-color: rgb(248, 248, 255); }

img { border: 0px; max-width: 100%; }

abbr { border-bottom-style: none; }

a { color: rgb(65, 131, 196); text-decoration: none; }

a:hover { text-decoration: underline; }

a code, a:link code, a:visited code { color: rgb(65, 131, 196); }

h2, h3 { margin: 1em 0px; }

h1, h2, h3, h4, h5, h6 { border: 0px; }

h1 { font-size: 170%; border-top-width: 4px; border-top-style: solid; borde=
r-top-color: rgb(170, 170, 170); padding-top: 0.5em; margin-top: 1.5em; }

h1:first-child { margin-top: 0px; padding-top: 0.25em; border-top-style: no=
ne; }

h2 { font-size: 150%; margin-top: 1.5em; border-bottom-width: 1px; border-b=
ottom-style: solid; border-bottom-color: rgb(221, 221, 221); padding-bottom=
: 0.5em; }

h3 { margin-top: 1em; }

hr { height: 0px; margin: 15px 0px; overflow: hidden; border-width: 0px 0px=
 4px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221); =
background: transparent; }

ul { margin: 1em 0px 1em 2em; }

ol { margin: 1em 0px 1em 2em; }

ul li, ol li { margin-top: 0.5em; margin-bottom: 0.5em; }

ul ul, ul ol, ol ol, ol ul { margin-top: 0px; margin-bottom: 0px; }

blockquote { margin: 1em 0px; border-left-width: 5px; border-left-style: so=
lid; border-left-color: rgb(221, 221, 221); padding-left: 0.6em; color: rgb=
(85, 85, 85); }

dt { font-weight: bold; margin-left: 1em; }

dd { margin-left: 2em; margin-bottom: 1em; }

@media screen and (min-width: 768px) {=20
  body { width: 748px; margin: 10px auto; }
}

pre code { display: block; padding: 0.5em; color: rgb(51, 51, 51); backgrou=
nd: rgb(248, 248, 255); }

pre .comment, pre .template_comment, pre .diff .header, pre .javadoc { colo=
r: rgb(153, 153, 136); font-style: italic; }

pre .keyword, pre .css .rule .keyword, pre .winutils, pre .javascript .titl=
e, pre .nginx .title, pre .subst, pre .request, pre .status { color: rgb(51=
, 51, 51); font-weight: bold; }

pre .number, pre .hexcolor, pre .ruby .constant { color: rgb(0, 153, 153); =
}

pre .string, pre .tag .value, pre .phpdoc, pre .tex .formula { color: rgb(2=
21, 17, 68); }

pre .title, pre .id, pre .coffeescript .params, pre .scss .preprocessor { c=
olor: rgb(153, 0, 0); font-weight: bold; }

pre .javascript .title, pre .lisp .title, pre .clojure .title, pre .subst {=
 font-weight: normal; }

pre .class .title, pre .haskell .type, pre .vhdl .literal, pre .tex .comman=
d { color: rgb(68, 85, 136); font-weight: bold; }

pre .tag, pre .tag .title, pre .rules .property, pre .django .tag .keyword =
{ color: rgb(0, 0, 128); font-weight: normal; }

pre .attribute, pre .variable, pre .lisp .body { color: rgb(0, 128, 128); }

pre .regexp { color: rgb(0, 153, 38); }

pre .class { color: rgb(68, 85, 136); font-weight: bold; }

pre .symbol, pre .ruby .symbol .string, pre .lisp .keyword, pre .tex .speci=
al, pre .prompt { color: rgb(153, 0, 115); }

pre .built_in, pre .lisp .title, pre .clojure .built_in { color: rgb(0, 134=
, 179); }

pre .preprocessor, pre .pi, pre .doctype, pre .shebang, pre .cdata { color:=
 rgb(153, 153, 153); font-weight: bold; }

pre .deletion { background: rgb(255, 221, 221); }

pre .addition { background: rgb(221, 255, 221); }

pre .diff .change { background: rgb(0, 134, 179); }

pre .chunk { color: rgb(170, 170, 170); }
------=_NextPart_000_CED5_0BE1B84A.05EF82CC--
